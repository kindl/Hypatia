module Abstract.Applicative

import Common.Base(always, alwaysSecond, identity)


apply map2 a1 a2 =
    map2 identity a1 a2

applyFirst map2 a1 a2 =
    map2 always a1 a2

applySecond map2 a1 a2 =
    map2 alwaysSecond a1 a2

map point map2 f a =
    map2 identity (point f) a

map3 : (forall t1 t2 t3 . (t1 -> t2 -> t3) -> f t1 -> f t2 -> f t3)
    -> (a1 -> a2 -> a3 -> a4)
    -> f a1 -> f a2 -> f a3 -> f a4
map3 map2 f a1 a2 a3 =
    map2 identity (map2 f a1 a2) a3

map4 : (forall t1 t2 t3 . (t1 -> t2 -> t3) -> f t1 -> f t2 -> f t3)
    -> (a1 -> a2 -> a3 -> a4 -> a5)
    -> f a1 -> f a2 -> f a3 -> f a4 -> f a5
map4 map2 f a1 a2 a3 a4 =
    map2 identity (map3 map2 f a1 a2 a3) a4
